<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       		http://www.springframework.org/schema/beans/spring-beans.xsd 
       		http://www.springframework.org/schema/context 
       		http://www.springframework.org/schema/context/spring-context.xsd
       		http://www.springframework.org/schema/aop 
       		http://www.springframework.org/schema/aop/spring-aop.xsd
       		http://www.springframework.org/schema/mvc
       		http://www.springframework.org/schema/mvc/spring-mvc.xsd
       		http://www.springframework.org/schema/cache
        	http://www.springframework.org/schema/cache/spring-cache.xsd"
       default-autowire="byName">

	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<!-- 配置连接池属性 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
    	<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/seckill?useUnicode=true&amp;characterEncoding=utf8"/>
    	<property name="user" value="root"/>
    	<property name="password" value="root"/>

    	<!-- c3p0私有属性 -->
    	<property name="maxPoolSize" value="30"/>
    	<property name="minPoolSize" value="10"/>
    	<property name="autoCommitOnClose" value="false"/>
    	<property name="checkoutTimeout" value="1000"/>
    	<property name="acquireRetryAttempts" value="2"/>
    </bean> 
    
    <!-- 约定大于配置 -->  
    <!-- 3.配置sqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 注入数据库链接池 -->
    	<property name="dataSource" ref="dataSource"/>
    	<!-- 配置mybatis全局配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
    	<!-- 扫描entity包，使用别名，多个包使用;分隔 -->
    	<property name="typeAliasesPackage" value="org.seckill.entity"/>
    	<!-- 扫描sql配置文件，mapper所需的xml文件 -->
    	<property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- 4.配置扫描Dao接口，动态实现Dao接口，并注入到容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    	<!-- 给出需要扫描Dao接口包 -->
    	<property name="basePackage" value="org.seckill.dao"/>
    </bean>
    
    <!-- RedisDao 实际应用中放配置文件中配置 -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379"/>
    </bean>

</beans>